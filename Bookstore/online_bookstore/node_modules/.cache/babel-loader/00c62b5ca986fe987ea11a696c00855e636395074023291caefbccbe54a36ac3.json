{"ast":null,"code":"// Action Types\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\n\n// Initial State\nconst initialState = {\n  cartItems: []\n};\n\n// Reducer\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      // Check if the item is already in the cart\n      const existingItemIndex = state.cartItems.findIndex(item => item.bookId === action.payload.bookId);\n      if (existingItemIndex !== -1) {\n        // If item exists, update the quantity\n        const updatedCartItems = [...state.cartItems];\n        updatedCartItems[existingItemIndex].quantity += action.payload.quantity;\n        return {\n          ...state,\n          cartItems: updatedCartItems\n        };\n      } else {\n        // If item does not exist, add it to the cart\n        return {\n          ...state,\n          cartItems: [...state.cartItems, action.payload]\n        };\n      }\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.bookId !== action.payload)\n      };\n    case UPDATE_CART_QUANTITY:\n      const {\n        bookId,\n        quantity\n      } = action.payload;\n      return {\n        ...state,\n        cartItems: state.cartItems.map(item => item.bookId === bookId ? {\n          ...item,\n          quantity: quantity\n        } : item)\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n\n// Action Creators\nexport const addToCart = book => ({\n  type: ADD_TO_CART,\n  payload: {\n    bookId: book.bookId,\n    title: book.title,\n    price: book.price,\n    quantity: 1 // Initial quantity when adding to cart\n  }\n});\nexport const removeFromCart = bookId => ({\n  type: REMOVE_FROM_CART,\n  payload: bookId\n});\nexport const updateCartQuantity = (bookId, quantity) => ({\n  type: UPDATE_CART_QUANTITY,\n  payload: {\n    bookId,\n    quantity\n  }\n});\nexport const clearCart = () => ({\n  type: CLEAR_CART\n});\nexport default cartReducer;","map":{"version":3,"names":["ADD_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","initialState","cartItems","cartReducer","state","action","type","existingItemIndex","findIndex","item","bookId","payload","updatedCartItems","quantity","filter","map","addToCart","book","title","price","removeFromCart","updateCartQuantity","clearCart"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/components/Cart.js"],"sourcesContent":["// Action Types\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\n// Initial State\r\nconst initialState = {\r\n    cartItems: []\r\n};\r\n\r\n// Reducer\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n            // Check if the item is already in the cart\r\n            const existingItemIndex = state.cartItems.findIndex(item => item.bookId === action.payload.bookId);\r\n\r\n            if (existingItemIndex !== -1) {\r\n                // If item exists, update the quantity\r\n                const updatedCartItems = [...state.cartItems];\r\n                updatedCartItems[existingItemIndex].quantity += action.payload.quantity;\r\n                return {\r\n                    ...state,\r\n                    cartItems: updatedCartItems\r\n                };\r\n            } else {\r\n                // If item does not exist, add it to the cart\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, action.payload]\r\n                };\r\n            }\r\n\r\n        case REMOVE_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(item => item.bookId !== action.payload)\r\n            };\r\n\r\n        case UPDATE_CART_QUANTITY:\r\n            const { bookId, quantity } = action.payload;\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.map(item =>\r\n                    item.bookId === bookId ? { ...item, quantity: quantity } : item\r\n                )\r\n            };\r\n\r\n        case CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action Creators\r\nexport const addToCart = (book) => ({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n        bookId: book.bookId,\r\n        title: book.title,\r\n        price: book.price,\r\n        quantity: 1 // Initial quantity when adding to cart\r\n    }\r\n});\r\n\r\nexport const removeFromCart = (bookId) => ({\r\n    type: REMOVE_FROM_CART,\r\n    payload: bookId\r\n});\r\n\r\nexport const updateCartQuantity = (bookId, quantity) => ({\r\n    type: UPDATE_CART_QUANTITY,\r\n    payload: { bookId, quantity }\r\n});\r\n\r\nexport const clearCart = () => ({\r\n    type: CLEAR_CART\r\n});\r\n\r\nexport default cartReducer;\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,UAAU,GAAG,YAAY;;AAEtC;AACA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKT,WAAW;MACZ;MACA,MAAMU,iBAAiB,GAAGH,KAAK,CAACF,SAAS,CAACM,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKL,MAAM,CAACM,OAAO,CAACD,MAAM,CAAC;MAElG,IAAIH,iBAAiB,KAAK,CAAC,CAAC,EAAE;QAC1B;QACA,MAAMK,gBAAgB,GAAG,CAAC,GAAGR,KAAK,CAACF,SAAS,CAAC;QAC7CU,gBAAgB,CAACL,iBAAiB,CAAC,CAACM,QAAQ,IAAIR,MAAM,CAACM,OAAO,CAACE,QAAQ;QACvE,OAAO;UACH,GAAGT,KAAK;UACRF,SAAS,EAAEU;QACf,CAAC;MACL,CAAC,MAAM;QACH;QACA,OAAO;UACH,GAAGR,KAAK;UACRF,SAAS,EAAE,CAAC,GAAGE,KAAK,CAACF,SAAS,EAAEG,MAAM,CAACM,OAAO;QAClD,CAAC;MACL;IAEJ,KAAKb,gBAAgB;MACjB,OAAO;QACH,GAAGM,KAAK;QACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACY,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAKL,MAAM,CAACM,OAAO;MAC5E,CAAC;IAEL,KAAKZ,oBAAoB;MACrB,MAAM;QAAEW,MAAM;QAAEG;MAAS,CAAC,GAAGR,MAAM,CAACM,OAAO;MAC3C,OAAO;QACH,GAAGP,KAAK;QACRF,SAAS,EAAEE,KAAK,CAACF,SAAS,CAACa,GAAG,CAACN,IAAI,IAC/BA,IAAI,CAACC,MAAM,KAAKA,MAAM,GAAG;UAAE,GAAGD,IAAI;UAAEI,QAAQ,EAAEA;QAAS,CAAC,GAAGJ,IAC/D;MACJ,CAAC;IAEL,KAAKT,UAAU;MACX,OAAO;QACH,GAAGI,KAAK;QACRF,SAAS,EAAE;MACf,CAAC;IAEL;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMY,SAAS,GAAIC,IAAI,KAAM;EAChCX,IAAI,EAAET,WAAW;EACjBc,OAAO,EAAE;IACLD,MAAM,EAAEO,IAAI,CAACP,MAAM;IACnBQ,KAAK,EAAED,IAAI,CAACC,KAAK;IACjBC,KAAK,EAAEF,IAAI,CAACE,KAAK;IACjBN,QAAQ,EAAE,CAAC,CAAC;EAChB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,cAAc,GAAIV,MAAM,KAAM;EACvCJ,IAAI,EAAER,gBAAgB;EACtBa,OAAO,EAAED;AACb,CAAC,CAAC;AAEF,OAAO,MAAMW,kBAAkB,GAAGA,CAACX,MAAM,EAAEG,QAAQ,MAAM;EACrDP,IAAI,EAAEP,oBAAoB;EAC1BY,OAAO,EAAE;IAAED,MAAM;IAAEG;EAAS;AAChC,CAAC,CAAC;AAEF,OAAO,MAAMS,SAAS,GAAGA,CAAA,MAAO;EAC5BhB,IAAI,EAAEN;AACV,CAAC,CAAC;AAEF,eAAeG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}