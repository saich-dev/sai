{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiku\\\\OneDrive\\\\Desktop\\\\odin\\\\Bookstore\\\\online_bookstore\\\\src\\\\components\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BookItem from './BookItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await fetch('https://books.google.co.in/books?uid=103234538657727512031&as_coll');\n        const data = await response.json();\n        setBooks(data.items); // Adjust based on API response structure\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      }\n    };\n    fetchBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-list\",\n    children: books.map(book => /*#__PURE__*/_jsxDEV(BookItem, {\n      book: book\n    }, book.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = BookList;\nexport default BookList;\nconst fetchBooks = async () => {\n  try {\n    const response = await fetch('http://localhost:5000/api/books');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.text(); // Use response.text() to handle HTML response\n    // Handle the HTML data as needed\n    console.log(data); // For example, log the HTML data\n  } catch (error) {\n    console.error('Error fetching books:', error);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","BookItem","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","fetchBooks","response","fetch","data","json","items","error","console","className","children","map","book","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","ok","Error","text","log","$RefreshReg$"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/components/BookList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BookItem from './BookItem';\r\n\r\nconst BookList = () => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await fetch('https://books.google.co.in/books?uid=103234538657727512031&as_coll');\r\n        const data = await response.json();\r\n        setBooks(data.items); // Adjust based on API response structure\r\n      } catch (error) {\r\n        console.error('Error fetching books:', error);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"book-list\">\r\n      {books.map(book => (\r\n        <BookItem key={book.id} book={book} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookList;\r\n\r\nconst fetchBooks = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/books');\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.text(); // Use response.text() to handle HTML response\r\n    // Handle the HTML data as needed\r\n    console.log(data); // For example, log the HTML data\r\n  } catch (error) {\r\n    console.error('Error fetching books:', error);\r\n  }\r\n};\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAoE,CAAC;QAClG,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBX,KAAK,CAACY,GAAG,CAACC,IAAI,iBACbhB,OAAA,CAACF,QAAQ;MAAekB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAxBKD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA0Bd,eAAeA,QAAQ;AAEvB,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;IAC/D,IAAI,CAACD,QAAQ,CAACiB,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMhB,IAAI,GAAG,MAAMF,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC;IACAb,OAAO,CAACc,GAAG,CAAClB,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC;AAAC,IAAAW,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}