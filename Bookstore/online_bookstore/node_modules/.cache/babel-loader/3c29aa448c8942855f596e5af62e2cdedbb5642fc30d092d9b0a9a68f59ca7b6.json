{"ast":null,"code":"import axios from 'axios';\nconst fetchBooks = async query => {\n  const apiKey = 'YOUR_GOOGLE_BOOKS_API_KEY';\n  const url = `https://www.googleapis.com/books/v1/volumes?q=${query}&key=${apiKey}`;\n  try {\n    const response = await axios.get(url);\n    console.log(response.data);\n  } catch (error) {\n    console.error('Error fetching books:', error);\n  }\n};\nconst fetchBookById = async query => {\n  const apiKey = 'YOUR_GOOGLE_BOOKS_API_KEY';\n  const url = `https://www.googleapis.com/books/v1/volumes?q=${query}&key=${apiKey}`;\n  try {\n    const response = await axios.get(url);\n    console.log(response.data);\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('Response error:', error.response.data);\n      console.error('Status code:', error.response.status);\n      console.error('Headers:', error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Error:', error.message);\n    }\n  }\n};","map":{"version":3,"names":["axios","fetchBooks","query","apiKey","url","response","get","console","log","data","error","fetchBookById","status","headers","request","message"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchBooks = async (query) => {\r\n  const apiKey = 'YOUR_GOOGLE_BOOKS_API_KEY';\r\n  const url = `https://www.googleapis.com/books/v1/volumes?q=${query}&key=${apiKey}`;\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n  } catch (error) {\r\n    console.error('Error fetching books:', error);\r\n  }\r\n};\r\nconst fetchBookById = async (query) => {\r\n  const apiKey = 'YOUR_GOOGLE_BOOKS_API_KEY';\r\n  const url = `https://www.googleapis.com/books/v1/volumes?q=${query}&key=${apiKey}`;\r\n\r\n  try {\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Response error:', error.response.data);\r\n      console.error('Status code:', error.response.status);\r\n      console.error('Headers:', error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('No response received:', error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error:', error.message);\r\n    }\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;EAClC,MAAMC,MAAM,GAAG,2BAA2B;EAC1C,MAAMC,GAAG,GAAG,iDAAiDF,KAAK,QAAQC,MAAM,EAAE;EAElF,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACF,GAAG,CAAC;IACrCG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC;AACD,MAAMC,aAAa,GAAG,MAAOT,KAAK,IAAK;EACrC,MAAMC,MAAM,GAAG,2BAA2B;EAC1C,MAAMC,GAAG,GAAG,iDAAiDF,KAAK,QAAQC,MAAM,EAAE;EAElF,IAAI;IACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACF,GAAG,CAAC;IACrCG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACL,QAAQ,EAAE;MAClB;MACA;MACAE,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACL,QAAQ,CAACI,IAAI,CAAC;MACrDF,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACL,QAAQ,CAACO,MAAM,CAAC;MACpDL,OAAO,CAACG,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACL,QAAQ,CAACQ,OAAO,CAAC;IACnD,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACxB;MACAP,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;IACvD,CAAC,MAAM;MACL;MACAP,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACK,OAAO,CAAC;IACxC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}