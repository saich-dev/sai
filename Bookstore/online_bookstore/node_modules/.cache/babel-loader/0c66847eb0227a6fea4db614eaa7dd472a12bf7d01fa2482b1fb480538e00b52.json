{"ast":null,"code":"import { postRequest } from \"../utils/Ajax\";\nimport { GlobalState } from \"../utils/GlobalState\";\nimport { history } from \"../utils/history\";\nexport function getOrdersOneUser(callback) {\n  let data = {};\n  data['token'] = GlobalState.get('token');\n  if (!data['token']) {\n    history.push('/login');\n  }\n  const handler = data => {\n    if (data.verify === '0') {\n      history.push('/login');\n    } else {\n      callback(data);\n    }\n  };\n  postRequest(GlobalState.get('url') + '/getOrdersOneUser', data, handler);\n}\nexport function getOrdersAllUsers(callback) {\n  let data = {};\n  data['token'] = GlobalState.get('token');\n  if (!data['token']) {\n    history.push('/login');\n  }\n  const handler = data => {\n    if (data.verify === '0') {\n      history.push('/login');\n    } else {\n      callback(data);\n    }\n  };\n  postRequest(GlobalState.get('url') + '/getOrdersAllUsers', data, handler);\n}\nexport function getOrderCollectionsAllUsers(callback) {\n  let data = {};\n  data['token'] = GlobalState.get('token');\n  if (!data['token']) {\n    history.push('/login');\n  }\n  const handler = data => {\n    if (data.verify === '0') {\n      history.push('/login');\n    } else {\n      callback(data);\n    }\n  };\n  postRequest(GlobalState.get('url') + '/getOrderCollectionsAllUsers', data, handler);\n}\nexport function getOrderCollectionsOneUser(callback) {\n  let data = {};\n  data['token'] = GlobalState.get('token');\n  if (!data['token']) {\n    history.push('/login');\n  }\n  const handler = data => {\n    if (data.verify === '0') {\n      history.push('/login');\n    } else {\n      callback(data);\n    }\n  };\n  postRequest(GlobalState.get('url') + '/getOrderCollectionsOneUser', data, handler);\n}\nexport function getOrderItemsOneOrder(oid, index, callback) {\n  let data = {};\n  data['token'] = GlobalState.get('token');\n  if (!data['token']) {\n    history.push('/login');\n  }\n  data['oid'] = oid;\n  const handler = data => {\n    if (data.verify === '0') {\n      history.push('/login');\n    } else {\n      callback(index, data);\n    }\n  };\n  postRequest(GlobalState.get('url') + '/getOrderItemsOneOrder', data, handler);\n}\nexport function dateCmp(a, b) {\n  let arrA = a.split('/'),\n    arrB = b.split('/');\n  return arrA[0] * 10000 + arrA[1] * 100 + arrA[2] >= arrB[0] * 10000 + arrB[1] * 100 + arrB[2];\n}\nexport const orderColumns = [{\n  title: 'Order ID',\n  field: 'oid'\n}, {\n  title: 'Date',\n  field: 'date',\n  customSort: (a, b) => dateCmp(a.date, b.date),\n  customFilterAndSearch: (text, data) => {\n    let filterReg = /^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})-(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/;\n    if (text.match(filterReg)) {\n      let split = text.split('-');\n      console.log(dateCmp(data.date, split[0]));\n      console.log(dateCmp(data.date, split[1]));\n      if (dateCmp(data.date, split[0]) && dateCmp(split[1], data.date)) {\n        return true;\n      }\n    }\n    return false;\n  }\n}, {\n  title: 'Cost',\n  field: 'cost',\n  type: 'numeric'\n}];\nexport function orderDataFilter(raw) {\n  let data = [];\n  raw.forEach(cur => {\n    let date = new Date(cur.date);\n    data.push({\n      oid: cur.oid,\n      cost: cur.cost,\n      date: date.getUTCFullYear() + '/' + (date.getUTCMonth() + 1) + '/' + date.getUTCDate()\n    });\n  });\n  return data;\n}","map":{"version":3,"names":["postRequest","GlobalState","history","getOrdersOneUser","callback","data","get","push","handler","verify","getOrdersAllUsers","getOrderCollectionsAllUsers","getOrderCollectionsOneUser","getOrderItemsOneOrder","oid","index","dateCmp","a","b","arrA","split","arrB","orderColumns","title","field","customSort","date","customFilterAndSearch","text","filterReg","match","console","log","type","orderDataFilter","raw","forEach","cur","Date","cost","getUTCFullYear","getUTCMonth","getUTCDate"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/services/orderService.js"],"sourcesContent":["import {postRequest} from \"../utils/Ajax\";\nimport {GlobalState} from \"../utils/GlobalState\";\nimport {history} from \"../utils/history\";\n\nexport function getOrdersOneUser(callback) {\n    let data = {};\n    data['token'] = GlobalState.get('token');\n    if (!data['token']) {\n        history.push('/login');\n    }\n\n    const handler = (data) => {\n        if (data.verify === '0') {\n            history.push('/login');\n        }\n        else {\n            callback(data);\n        }\n    };\n\n    postRequest(GlobalState.get('url') + '/getOrdersOneUser', data, handler);\n}\n\nexport function getOrdersAllUsers(callback) {\n    let data = {};\n    data['token'] = GlobalState.get('token');\n    if (!data['token']) {\n        history.push('/login');\n    }\n\n    const handler = (data) => {\n        if (data.verify === '0') {\n            history.push('/login');\n        }\n        else {\n            callback(data);\n        }\n    };\n\n    postRequest(GlobalState.get('url') + '/getOrdersAllUsers', data, handler);\n}\n\nexport function getOrderCollectionsAllUsers(callback) {\n    let data = {};\n    data['token'] = GlobalState.get('token');\n    if (!data['token']) {\n        history.push('/login');\n    }\n\n    const handler = (data) => {\n        if (data.verify === '0') {\n            history.push('/login');\n        }\n        else {\n            callback(data);\n        }\n    };\n\n    postRequest(GlobalState.get('url') + '/getOrderCollectionsAllUsers', data, handler);\n}\n\nexport function getOrderCollectionsOneUser(callback) {\n    let data = {};\n    data['token'] = GlobalState.get('token');\n    if (!data['token']) {\n        history.push('/login');\n    }\n\n    const handler = (data) => {\n        if (data.verify === '0') {\n            history.push('/login');\n        }\n        else {\n            callback(data);\n        }\n    };\n\n    postRequest(GlobalState.get('url') + '/getOrderCollectionsOneUser', data, handler);\n}\n\nexport function getOrderItemsOneOrder(oid, index, callback) {\n    let data = {};\n    data['token'] = GlobalState.get('token');\n    if (!data['token']) {\n        history.push('/login');\n    }\n    data['oid'] = oid;\n\n    const handler = (data) => {\n        if (data.verify === '0') {\n            history.push('/login');\n        }\n        else {\n            callback(index, data);\n        }\n    };\n\n    postRequest(GlobalState.get('url') + '/getOrderItemsOneOrder', data, handler);\n}\n\nexport function dateCmp(a, b) {\n    let arrA = a.split('/'), arrB = b.split('/');\n    return arrA[0] * 10000 + arrA[1] * 100 + arrA[2] >= arrB[0] * 10000 + arrB[1] * 100 + arrB[2];\n}\n\nexport const orderColumns = [{\n    title: 'Order ID',\n    field: 'oid'\n}, {\n    title: 'Date',\n    field: 'date',\n    customSort: (a, b) => dateCmp(a.date, b.date),\n    customFilterAndSearch: (text, data) => {\n        let filterReg = /^(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})-(\\d{4})\\/(\\d{1,2})\\/(\\d{1,2})$/;\n        if (text.match(filterReg)) {\n            let split = text.split('-');\n            console.log(dateCmp(data.date, split[0]));\n            console.log(dateCmp(data.date, split[1]));\n            if (dateCmp(data.date, split[0]) && dateCmp(split[1], data.date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}, {\n    title: 'Cost',\n    field: 'cost',\n    type: 'numeric'\n}];\n\nexport function orderDataFilter(raw) {\n    let data = [];\n    raw.forEach((cur) => {\n        let date = new Date(cur.date);\n        data.push({\n            oid: cur.oid,\n            cost: cur.cost,\n            date: date.getUTCFullYear() + '/' + (date.getUTCMonth() + 1) + '/' + date.getUTCDate()\n        })\n    });\n\n    return data;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}