{"ast":null,"code":"export function getRequest(url, params, callback) {\n  if (params) {\n    let paramsArray = [];\n    Object.keys(params).forEach(key => paramsArray.push(key + '=' + params[key]));\n    if (url.search(/\\?/) === -1) {\n      url += '?' + paramsArray.join('&');\n    } else {\n      url += '&' + paramsArray.join('&');\n    }\n  }\n  fetch(url, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).then(json => {\n    callback(json);\n  }).catch(error => {\n    alert(error);\n  });\n}\nexport function postRequest(url, json, callback) {\n  let opts = {\n    method: \"POST\",\n    body: JSON.stringify(json),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: \"include\"\n  };\n  fetch(url, opts).then(response => {\n    console.log(response);\n    return response.json();\n  }).then(json => {\n    callback(json);\n  }).catch(error => {\n    console.log(error);\n  });\n}","map":{"version":3,"names":["getRequest","url","params","callback","paramsArray","Object","keys","forEach","key","push","search","join","fetch","method","then","response","json","catch","error","alert","postRequest","opts","body","JSON","stringify","headers","credentials","console","log"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/utils/Ajax.js"],"sourcesContent":["export function getRequest(url, params, callback) {\n    if (params) {\n        let paramsArray = [];\n        Object.keys(params).forEach(key => paramsArray.push(key + '=' + params[key]))\n        if (url.search(/\\?/) === -1) {\n            url += '?' + paramsArray.join('&')\n        } else {\n            url += '&' + paramsArray.join('&')\n        }\n    }\n\n    fetch(url, {\n        method: 'GET',\n    })\n        .then((response) => {\n            return response.json();\n        }).then((json) => {\n            callback(json);\n        }\n    ).catch((error) => {\n        alert(error)\n    })\n}\n\nexport function postRequest(url, json, callback) {\n    let opts = {\n        method: \"POST\",\n        body: JSON.stringify(json),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n    };\n\n    fetch(url, opts)\n        .then((response) => {\n            console.log(response);\n            return response.json();\n        }).then((json) => {\n        callback(json);\n    }).catch((error) => {\n        console.log(error);\n    });\n}"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,GAAG,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EAC9C,IAAID,MAAM,EAAE;IACR,IAAIE,WAAW,GAAG,EAAE;IACpBC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAACC,GAAG,IAAIJ,WAAW,CAACK,IAAI,CAACD,GAAG,GAAG,GAAG,GAAGN,MAAM,CAACM,GAAG,CAAC,CAAC,CAAC;IAC7E,IAAIP,GAAG,CAACS,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACzBT,GAAG,IAAI,GAAG,GAAGG,WAAW,CAACO,IAAI,CAAC,GAAG,CAAC;IACtC,CAAC,MAAM;MACHV,GAAG,IAAI,GAAG,GAAGG,WAAW,CAACO,IAAI,CAAC,GAAG,CAAC;IACtC;EACJ;EAEAC,KAAK,CAACX,GAAG,EAAE;IACPY,MAAM,EAAE;EACZ,CAAC,CAAC,CACGC,IAAI,CAAEC,QAAQ,IAAK;IAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAK;IACdb,QAAQ,CAACa,IAAI,CAAC;EAClB,CACJ,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IACfC,KAAK,CAACD,KAAK,CAAC;EAChB,CAAC,CAAC;AACN;AAEA,OAAO,SAASE,WAAWA,CAACnB,GAAG,EAAEe,IAAI,EAAEb,QAAQ,EAAE;EAC7C,IAAIkB,IAAI,GAAG;IACPR,MAAM,EAAE,MAAM;IACdS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;IAC1BS,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,WAAW,EAAE;EACjB,CAAC;EAEDd,KAAK,CAACX,GAAG,EAAEoB,IAAI,CAAC,CACXP,IAAI,CAAEC,QAAQ,IAAK;IAChBY,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;IACrB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAK;IAClBb,QAAQ,CAACa,IAAI,CAAC;EAClB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;IAChBS,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EACtB,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}