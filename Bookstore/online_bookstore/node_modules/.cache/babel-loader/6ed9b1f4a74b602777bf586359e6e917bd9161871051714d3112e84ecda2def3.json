{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiku\\\\OneDrive\\\\Desktop\\\\odin\\\\Bookstore\\\\online_bookstore\\\\src\\\\components\\\\BookList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]); // Initialize as an empty array\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await axios.get('//www.googleapis.com/books/v1/volumes/');\n        setBooks(response.data.items); // Assuming 'items' is the array of books in the response\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchBooks();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error fetching books: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: books.filter(book => book.title).map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: book.title\n    }, book.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"t7xRBLner9jFl7+6XBa85HwDKiE=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","error","setError","fetchBooks","response","get","data","items","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","book","title","map","id","_c","$RefreshReg$"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/components/BookList.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BookList = () => {\r\n  const [books, setBooks] = useState([]); // Initialize as an empty array\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      try {\r\n        const response = await axios.get('//www.googleapis.com/books/v1/volumes/');\r\n        setBooks(response.data.items); // Assuming 'items' is the array of books in the response\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchBooks();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error fetching books: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {books.filter(book => book.title).map(book => (\r\n        <div key={book.id}>{book.title}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,wCAAwC,CAAC;QAC1EL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZN,QAAQ,CAACM,GAAG,CAACC,OAAO,CAAC;MACvB;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAc,QAAA,GAAK,wBAAsB,EAACT,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACjD;EAEA,oBACElB,OAAA;IAAAc,QAAA,EACGX,KAAK,CAACgB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC,CAACC,GAAG,CAACF,IAAI,iBACxCpB,OAAA;MAAAc,QAAA,EAAoBM,IAAI,CAACC;IAAK,GAApBD,IAAI,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}