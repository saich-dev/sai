{"ast":null,"code":"export default ((state, action) => {\n  const {\n    carts\n  } = state;\n  let cartIndex;\n  switch (action.type) {\n    case \"ADD_CART\":\n      cartIndex = carts.findIndex(cart => cart.id === action.payload);\n      if (cartIndex !== -1) {\n        carts[cartIndex].quantity = carts[cartIndex].quantity + 1;\n        return {\n          ...state,\n          carts: [...carts]\n        };\n      } else {\n        return {\n          ...state,\n          carts: [...state.carts, {\n            id: action.payload,\n            quantity: 1\n          }]\n        };\n      }\n    case \"FETCH_CART\":\n      return {\n        ...state,\n        carts: [...state.carts, ...action.payload]\n      };\n    case \"UPDATE_CART\":\n      cartIndex = carts.findIndex(cart => cart.id === action.payload.id);\n      if (cartIndex !== -1) {\n        carts[cartIndex].quantity = action.payload.quantity;\n      }\n      return {\n        ...state,\n        carts: [...carts]\n      };\n    case \"REMOVE_CART\":\n      return {\n        ...state,\n        carts: state.carts.filter(cart => cart.id !== action.payload)\n      };\n    case \"GET_SEARCHED_STRING\":\n      return {\n        ...state,\n        searchString: action.payload.trim() === \"\" ? null : action.payload\n      };\n    case \"GET_SEARCHED_BOOKS\":\n      const reg = new RegExp(`${action.payload}`, \"gi\");\n      return {\n        ...state,\n        searchedBooks: state.books.filter(book => book.title.match(reg))\n      };\n    case \"CLEAR_SEARCH\":\n      return {\n        ...state,\n        searchString: null,\n        searchedBooks: []\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["state","action","carts","cartIndex","type","findIndex","cart","id","payload","quantity","filter","searchString","trim","reg","RegExp","searchedBooks","books","book","title","match"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/context/Reducer.js"],"sourcesContent":["export default (state, action) => {\n  const { carts } = state;\n  let cartIndex;\n\n  switch (action.type) {\n    case \"ADD_CART\":\n      cartIndex = carts.findIndex(cart => cart.id === action.payload);\n      if (cartIndex !== -1) {\n        carts[cartIndex].quantity = carts[cartIndex].quantity + 1;\n        return {\n          ...state,\n          carts: [...carts]\n        };\n      } else {\n        return {\n          ...state,\n          carts: [...state.carts, { id: action.payload, quantity: 1 }]\n        };\n      }\n\n    case \"FETCH_CART\":\n      return {\n        ...state,\n        carts: [...state.carts, ...action.payload]\n      };\n\n    case \"UPDATE_CART\":\n      cartIndex = carts.findIndex(cart => cart.id === action.payload.id);\n      if (cartIndex !== -1) {\n        carts[cartIndex].quantity = action.payload.quantity;\n      }\n      return {\n        ...state,\n        carts: [...carts]\n      };\n\n    case \"REMOVE_CART\":\n      return {\n        ...state,\n        carts: state.carts.filter(cart => cart.id !== action.payload)\n      };\n    case \"GET_SEARCHED_STRING\":\n      return {\n        ...state,\n        searchString: action.payload.trim() === \"\" ? null : action.payload\n      };\n    case \"GET_SEARCHED_BOOKS\":\n      const reg = new RegExp(`${action.payload}`, \"gi\");\n      return {\n        ...state,\n        searchedBooks: state.books.filter(book => book.title.match(reg))\n      };\n\n    case \"CLEAR_SEARCH\":\n      return {\n        ...state,\n        searchString: null,\n        searchedBooks: []\n      };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,gBAAe,CAACA,KAAK,EAAEC,MAAM,KAAK;EAChC,MAAM;IAAEC;EAAM,CAAC,GAAGF,KAAK;EACvB,IAAIG,SAAS;EAEb,QAAQF,MAAM,CAACG,IAAI;IACjB,KAAK,UAAU;MACbD,SAAS,GAAGD,KAAK,CAACG,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACO,OAAO,CAAC;MAC/D,IAAIL,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBD,KAAK,CAACC,SAAS,CAAC,CAACM,QAAQ,GAAGP,KAAK,CAACC,SAAS,CAAC,CAACM,QAAQ,GAAG,CAAC;QACzD,OAAO;UACL,GAAGT,KAAK;UACRE,KAAK,EAAE,CAAC,GAAGA,KAAK;QAClB,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGF,KAAK;UACRE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAK,EAAE;YAAEK,EAAE,EAAEN,MAAM,CAACO,OAAO;YAAEC,QAAQ,EAAE;UAAE,CAAC;QAC7D,CAAC;MACH;IAEF,KAAK,YAAY;MACf,OAAO;QACL,GAAGT,KAAK;QACRE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAK,EAAE,GAAGD,MAAM,CAACO,OAAO;MAC3C,CAAC;IAEH,KAAK,aAAa;MAChBL,SAAS,GAAGD,KAAK,CAACG,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACD,EAAE,CAAC;MAClE,IAAIJ,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBD,KAAK,CAACC,SAAS,CAAC,CAACM,QAAQ,GAAGR,MAAM,CAACO,OAAO,CAACC,QAAQ;MACrD;MACA,OAAO;QACL,GAAGT,KAAK;QACRE,KAAK,EAAE,CAAC,GAAGA,KAAK;MAClB,CAAC;IAEH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGF,KAAK;QACRE,KAAK,EAAEF,KAAK,CAACE,KAAK,CAACQ,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACO,OAAO;MAC9D,CAAC;IACH,KAAK,qBAAqB;MACxB,OAAO;QACL,GAAGR,KAAK;QACRW,YAAY,EAAEV,MAAM,CAACO,OAAO,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,IAAI,GAAGX,MAAM,CAACO;MAC7D,CAAC;IACH,KAAK,oBAAoB;MACvB,MAAMK,GAAG,GAAG,IAAIC,MAAM,CAAC,GAAGb,MAAM,CAACO,OAAO,EAAE,EAAE,IAAI,CAAC;MACjD,OAAO;QACL,GAAGR,KAAK;QACRe,aAAa,EAAEf,KAAK,CAACgB,KAAK,CAACN,MAAM,CAACO,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,KAAK,CAACN,GAAG,CAAC;MACjE,CAAC;IAEH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGb,KAAK;QACRW,YAAY,EAAE,IAAI;QAClBI,aAAa,EAAE;MACjB,CAAC;IAEH;MACE,OAAOf,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}