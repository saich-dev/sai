{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiku\\\\OneDrive\\\\Desktop\\\\odin\\\\Bookstore\\\\online_bookstore\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [items, setItems] = useState([]);\n  const [filteredItems, setFilteredItems] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Example: fetching data from an API endpoint\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setItems(data); // Assuming data structure is an array of objects\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSearchChange = event => {\n    const searchTerm = event.target.value.toLowerCase();\n    setSearchTerm(searchTerm);\n    const filteredItems = items.filter(item => item.title && item.title.toLowerCase().includes(searchTerm) || item.author && item.author.toLowerCase().includes(searchTerm) || item.genre && item.genre.toLowerCase().includes(searchTerm));\n    setFilteredItems(filteredItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title, author, or genre\",\n      value: searchTerm,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: filteredItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.title, \" by \", item.author, \" (\", item.genre, \")\"]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"Y7qI1TBMKfnyPsH7nBEuw+h5sO0=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchBar","_s","searchTerm","setSearchTerm","items","setItems","filteredItems","setFilteredItems","fetchData","response","fetch","ok","Error","data","json","error","console","handleSearchChange","event","target","value","toLowerCase","filter","item","title","includes","author","genre","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","map","id","_c","$RefreshReg$"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/components/SearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SearchBar = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [items, setItems] = useState([]);\r\n  const [filteredItems, setFilteredItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Example: fetching data from an API endpoint\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/users');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setItems(data); // Assuming data structure is an array of objects\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSearchChange = (event) => {\r\n    const searchTerm = event.target.value.toLowerCase();\r\n    setSearchTerm(searchTerm);\r\n\r\n    const filteredItems = items.filter((item) =>\r\n      (item.title && item.title.toLowerCase().includes(searchTerm)) ||\r\n      (item.author && item.author.toLowerCase().includes(searchTerm)) ||\r\n      (item.genre && item.genre.toLowerCase().includes(searchTerm))\r\n    );\r\n\r\n    setFilteredItems(filteredItems);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search by title, author, or genre\"\r\n        value={searchTerm}\r\n        onChange={handleSearchChange}\r\n      />\r\n\r\n      <div className=\"search-results\">\r\n        {filteredItems.length > 0 ? (\r\n          <ul>\r\n            {filteredItems.map((item) => (\r\n              <li key={item.id}>\r\n                {item.title} by {item.author} ({item.genre})\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No results found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}