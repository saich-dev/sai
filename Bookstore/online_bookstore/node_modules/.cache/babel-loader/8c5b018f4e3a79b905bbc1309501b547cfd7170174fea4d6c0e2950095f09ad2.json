{"ast":null,"code":"// src/services/api.js\n\nimport axios from 'axios';\nconst apiKey = 'YOUR_GOOGLE_BOOKS_API_KEY';\nconst baseUrl = 'https://www.googleapis.com/books/v1';\nexport const fetchBooks = async query => {\n  try {\n    const response = await axios.get(`${baseUrl}/volumes`, {\n      params: {\n        q: query,\n        key: apiKey\n      }\n    });\n    return response.data.items;\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('Response error:', error.response.data);\n      console.error('Status code:', error.response.status);\n      console.error('Headers:', error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Error:', error.message);\n    }\n    throw error;\n  }\n};\nexport const fetchBookById = async id => {\n  try {\n    const response = await axios.get(`${baseUrl}/volumes/${id}`, {\n      params: {\n        key: apiKey\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      console.error('Response error:', error.response.data);\n      console.error('Status code:', error.response.status);\n      console.error('Headers:', error.response.headers);\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n    } else {\n      console.error('Error:', error.message);\n    }\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiKey","baseUrl","fetchBooks","query","response","get","params","q","key","data","items","error","console","status","headers","request","message","fetchBookById","id"],"sources":["C:/Users/saiku/OneDrive/Desktop/odin/Bookstore/online_bookstore/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst apiKey = 'YOUR_GOOGLE_BOOKS_API_KEY';\r\nconst baseUrl = 'https://www.googleapis.com/books/v1';\r\n\r\nexport const fetchBooks = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/volumes`, {\r\n      params: { q: query, key: apiKey }\r\n    });\r\n    return response.data.items;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Response error:', error.response.data);\r\n      console.error('Status code:', error.response.status);\r\n      console.error('Headers:', error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('No response received:', error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error:', error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchBookById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${baseUrl}/volumes/${id}`, {\r\n      params: { key: apiKey }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      console.error('Response error:', error.response.data);\r\n      console.error('Status code:', error.response.status);\r\n      console.error('Headers:', error.response.headers);\r\n    } else if (error.request) {\r\n      console.error('No response received:', error.request);\r\n    } else {\r\n      console.error('Error:', error.message);\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,2BAA2B;AAC1C,MAAMC,OAAO,GAAG,qCAAqC;AAErD,OAAO,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGJ,OAAO,UAAU,EAAE;MACrDK,MAAM,EAAE;QAAEC,CAAC,EAAEJ,KAAK;QAAEK,GAAG,EAAER;MAAO;IAClC,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACK,IAAI,CAACC,KAAK;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACP,QAAQ,EAAE;MAClB;MACA;MACAQ,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACP,QAAQ,CAACK,IAAI,CAAC;MACrDG,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACP,QAAQ,CAACS,MAAM,CAAC;MACpDD,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACP,QAAQ,CAACU,OAAO,CAAC;IACnD,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACxB;MACAH,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;IACvD,CAAC,MAAM;MACL;MACAH,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACK,OAAO,CAAC;IACxC;IACA,MAAML,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGJ,OAAO,YAAYiB,EAAE,EAAE,EAAE;MAC3DZ,MAAM,EAAE;QAAEE,GAAG,EAAER;MAAO;IACxB,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,IAAIA,KAAK,CAACP,QAAQ,EAAE;MAClBQ,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACP,QAAQ,CAACK,IAAI,CAAC;MACrDG,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACP,QAAQ,CAACS,MAAM,CAAC;MACpDD,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAACP,QAAQ,CAACU,OAAO,CAAC;IACnD,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACxBH,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;IACvD,CAAC,MAAM;MACLH,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACK,OAAO,CAAC;IACxC;IACA,MAAML,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}